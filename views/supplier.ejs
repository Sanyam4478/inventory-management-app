<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Suppliers - SuperInvSys</title>

    <!-- âœ… Bootstrap & FontAwesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Arial', sans-serif;
        }

        .top-navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 20px;
            background: #fff;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
        }

        .top-navbar .nav-links a {
            text-decoration: none;
            color: black;
            margin: 0 15px;
            font-weight: bold;
            transition: color 0.3s;
        }

        .top-navbar .nav-links a:hover {
            color: #0061ff;
        }

        .search-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 20px 5%;
        }

        .search-container input {
            width: 60%;
            padding: 12px;
            border-radius: 8px;
            border: 1px solid #ccc;
            font-size: 16px;
            transition: box-shadow 0.3s ease-in-out;
        }

        .search-container input:focus {
            box-shadow: 0px 0px 8px rgba(0, 97, 255, 0.3);
            outline: none;
            border-color: #0061ff;
        }

        .add-btn {
            background: #0061ff;
            color: white;
            padding: 12px 25px;
            font-size: 16px;
            font-weight: bold;
            border-radius: 8px;
            transition: all 0.3s;
            border: none;
            cursor: pointer;
        }

        .add-btn:hover {
            background: #004ecb;
        }

        .inventory-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 20px;
            margin: 40px 5%;
        }

        .product-card {
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            position: relative;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.15);
        }

        .product-card h5 {
            font-weight: bold;
        }

        .card-actions {
            position: absolute;
            top: 10px;
            right: 10px;
            display: flex;
            gap: 12px;
            z-index: 10;
        }

        .card-actions i {
            cursor: pointer;
            font-size: 18px;
            color: #555;
            transition: color 0.3s ease, transform 0.2s ease-in-out;
        }

        .card-actions .fa-edit:hover {
            color: #007bff;
            transform: scale(1.1);
        }

        .card-actions .fa-trash:hover {
            color: red;
            transform: scale(1.1);
        }

        .modal-content {
            border-radius: 15px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(8px);
            box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.2);
        }

        .modal-header {
            background: linear-gradient(135deg, #ff4d4d, #cc0000);
            color: white;
            padding: 15px;
        }

        .modal-header h4 {
            font-weight: bold;
            margin: 0;
        }

        .btn-save {
            background: #0061ff;
            color: white;
            padding: 12px 25px;
            font-size: 16px;
            font-weight: bold;
            border-radius: 8px;
            transition: all 0.3s;
            border: none;
        }

        .btn-save:hover {
            background: #004ecb;
        }
    </style>
</head>
<body>
    <div class="top-navbar">
        <h2>SuperInvSys</h2>
        <div class="nav-links">
            <a href="/dashboard">Dashboard</a>
            <a href="/inventory">Inventory</a>
            <a href="/supplier">Suppliers</a>
            <a href="#">Stock Alerts</a>
            <a href="#">Reports</a>
            <a href="#">Settings</a>
        </div>
    </div>

    <div class="search-container">
        <input type="text" placeholder="Search suppliers...">
        <button class="add-btn" data-bs-toggle="modal" data-bs-target="#addSupplierModal">Add Supplier</button>
    </div>

    <div class="d-flex justify-content-center my-3">
        <button id="activeBtn" class="btn btn-primary me-2">Active</button>
        <button id="inactiveBtn" class="btn btn-outline-secondary">Inactive</button>
    </div>

    <div id="supplierCardsContainer" class="inventory-grid"></div>
    <div id="restoreModalsContainer"></div>
    <div id="dynamicModalsContainer"></div>

    <%- include('partials/addSupplierModal') %>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const container = document.getElementById("supplierCardsContainer");
            const modalContainer = document.getElementById("restoreModalsContainer");
            const dynamicModals = document.getElementById("dynamicModalsContainer");
            const activeBtn = document.getElementById("activeBtn");
            const inactiveBtn = document.getElementById("inactiveBtn");

            window.restoreSupplier = async (id) => {
                try {
                    const response = await fetch(`/supplier/restore/${id}`, {
                        method: 'POST', headers: { 'Content-Type': 'application/json' }
                    });
                    if (response.ok) await loadSuppliers('inactive');
                    else alert('Failed to restore supplier.');
                } catch (error) { console.error('Restore error:', error); }
            };

            const loadSuppliers = async (status) => {
                try {
                    const res = await fetch(`/supplier/filter/${status}`);
                    const suppliers = await res.json();
                    renderSuppliers(suppliers, status);
                } catch (error) { console.error('Load error:', error); }
            };

            const renderSuppliers = (suppliers, status) => {
                container.innerHTML = "";
                modalContainer.innerHTML = "";
                dynamicModals.innerHTML = "";

                suppliers.forEach(s => {
                    const card = document.createElement("div");
                    card.className = "product-card";
                    card.innerHTML = `
                        <div class="card-actions">
                            ${status === 'active'
                                ? `<i class="fas fa-edit" data-bs-toggle="modal" data-bs-target="#editSupplierModal-${s.Supplier_ID}" data-tooltip="Edit"></i>
                                   <i class="fas fa-trash" data-bs-toggle="modal" data-bs-target="#deleteSupplierModal-${s.Supplier_ID}" data-tooltip="Delete"></i>`
                                : `<i class="fas fa-undo text-success" data-bs-toggle="modal" data-bs-target="#restoreSupplierModal-${s.Supplier_ID}" title="Restore"></i>`}
                        </div>
                        <h5>${s.Supplier_Name}</h5>
                        <p><strong>Phone:</strong> ${s.Contact_Number}</p>
                        <p><strong>Email:</strong> ${s.Email}</p>
                        <p><strong>Address:</strong> ${s.Address}</p>
                    `;
                    container.appendChild(card);

                    if (status === 'inactive') {
                        modalContainer.innerHTML += `
                            <div class="modal fade" id="restoreSupplierModal-${s.Supplier_ID}" tabindex="-1">
                                <div class="modal-dialog modal-dialog-centered">
                                    <div class="modal-content">
                                        <div class="modal-header bg-success text-white">
                                            <h4 class="modal-title">Restore Supplier</h4>
                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                                        </div>
                                        <div class="modal-body text-center">
                                            <i class="fas fa-undo restore-icon"></i>
                                            <p>Are you sure you want to restore <strong>${s.Supplier_Name}</strong>?</p>
                                            <p class="text-success">They will be moved back to the active list.</p>
                                        </div>
                                        <div class="modal-footer">
                                            <button onclick="restoreSupplier(${s.Supplier_ID})" class="btn btn-success" data-bs-dismiss="modal">Restore</button>
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                        </div>
                                    </div>
                                </div>
                            </div>`;
                    } else {
                        dynamicModals.innerHTML += `
                    <div class="modal fade" id="editSupplierModal-${s.Supplier_ID}" tabindex="-1">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">Edit Supplier</h4>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <form action="/supplier/edit/${s.Supplier_ID}" method="POST">
                                    <div class="modal-body">
                                        <input type="text" name="Supplier_Name" class="form-control mb-3" placeholder="Supplier Name" value="${s.Supplier_Name}" required>
                                        <input type="text" name="Contact_Number" class="form-control mb-3" placeholder="Contact Number" value="${s.Contact_Number}" required>
                                        <input type="email" name="Email" class="form-control mb-3" placeholder="Email" value="${s.Email}" required>
                                        <input type="text" name="Address" class="form-control mb-3" placeholder="Address" value="${s.Address}" required>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="submit" class="btn btn-save">Save Changes</button>
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                            <div class="modal fade" id="deleteSupplierModal-${s.Supplier_ID}" tabindex="-1">
                                <div class="modal-dialog modal-dialog-centered">
                                    <div class="modal-content">
                                        <div class="modal-header bg-danger text-white">
                                            <h4 class="modal-title">Delete Supplier</h4>
                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                                        </div>
                                        <form action="/supplier/delete/${s.Supplier_ID}" method="POST">
                                            <div class="modal-body text-center">
                                                <i class="fas fa-exclamation-triangle text-danger"></i>
                                                <p>Are you sure you want to delete <strong>${s.Supplier_Name}</strong>?</p>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="submit" class="btn btn-danger">Delete</button>
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>`;
                    }
                });
            };

            activeBtn.addEventListener('click', () => {
                activeBtn.classList.replace('btn-outline-secondary', 'btn-primary');
                inactiveBtn.classList.replace('btn-primary', 'btn-outline-secondary');
                loadSuppliers('active');
            });

            inactiveBtn.addEventListener('click', () => {
                inactiveBtn.classList.replace('btn-outline-secondary', 'btn-primary');
                activeBtn.classList.replace('btn-primary', 'btn-outline-secondary');
                loadSuppliers('inactive');
            });

            const filter = new URLSearchParams(window.location.search).get('filter') || 'active';
            if (filter === 'inactive') {
                inactiveBtn.classList.replace('btn-outline-secondary', 'btn-primary');
                activeBtn.classList.replace('btn-primary', 'btn-outline-secondary');
            }
            loadSuppliers(filter);
        });
    </script>
</body>
</html>
